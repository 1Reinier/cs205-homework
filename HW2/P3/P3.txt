
MULTITHREADING EXPERIMENT
-------------------------
In the graph P3_experiment_multithreading.png we see the execution times for 1, 2 and 4 threads. On my 2-core machine
 we see that the execution time for 2 threads is substantially faster thant for 1 thread. 4 Threads, however, barely
 makes a difference, since the 4 threads have to share 2 cores.

MULTITHREADING WITH INSTRUCTION-LEVEL OPTIMIZATIONS
---------------------------------------------------
The experiment with AVX optimizations shows exactly the opposite answer compared to the serial version. AVX is
emulated on my machine, which is likely the cause of slower execution times for more cores. The values can be seen in
 P3_multithreading_AVX.png. Another thing that is apparent is that the AVX code is a tenfold slower than the serial
 code. I wonder whether that is due to the emulation, or due to locking and waiting of threads (especially because 2
 and 4 threads are slower than only 1 thread, which should expectedly be the other way around).