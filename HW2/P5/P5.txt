
MULTITHREADING
--------------
This sped up the program by a factor of 2. (10 frames vs. 5 frames per second)

SPATIAL DECOMPOSITION
---------------------
This sped up the program immensely, by a factor 400 ony my Intel Duo Core machine. (2000 frames vs. 5 frames per second)
On my machine there does not seem to be a significant performance difference between different counts of threads.
This may be due to the fact that the simulation is in the end Python bound (in the serial part around update in
driver.py).

SORTING
-------
Sorting seems to even out the peaks in performance that were observed ealier. With four threads I reached about 70
frames per second, with 1 thread this is about a quarter lower. Since this part of the code is serial and Python-bound,
 it makes sense that the difference is not too big.

LOCKING
-------
Locking affects the simulation in that it ensures integrity of the data underlying it. It affects performance only a
little, by only 10% or so, on my machine: introducing locking made the frame count go from about 75 to 70 frames per
second on my machine.
